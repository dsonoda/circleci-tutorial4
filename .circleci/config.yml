version: 2.1
orbs:
  python: circleci/python@1.0.0
jobs:
  build:
    working_directory: ~/app
    docker:
      - image: circleci/python:3.8
        environment:
          PIPENV_VENV_IN_PROJECT: true
          DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
      - image: circleci/postgres:9.6.2
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.8/site-packages
      - python/install-packages:
          pkg-manager: pipenv
          app-dir: ~/app/app
      - run:
          name: Run django tests
          command: |
            cd ~/app/app
            pipenv run python manage.py test
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: tr1
  push_image:
    docker:
      - image: docker:18.09.0
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: install aws cli
          command: |
            apk add --no-cache --update py-pip
            pip install awscli
      - run:
          name: login ecr
          command: |
            $(aws ecr get-login --no-include-email --region ap-northeast-1)
      - run:
          name: build image
          command: |
            docker build -t ${ECR_DOMAIN}:$CIRCLE_SHA1 -t ${ECR_DOMAIN}:latest .
      - run:
          name: Push docker image
          command: |
            docker push ${ECR_DOMAIN}:$CIRCLE_SHA1
            docker push ${ECR_DOMAIN}:latest
  deploy:
    docker:
      - image: circleci/python:3.8
    steps:
      - run:
          name: install aws cli
          command: |
            sudo pip install awscli
      - run:
          name: download jq
          command: |
            wget https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
            mv jq-linux64 jq
      - run:
          name: login
          command: |
            $(aws ecr get-login --no-include-email --region ap-northeast-1)
      - run:
          name: deploy
          command: |
            aws ecs describe-task-definition --task-definition webapp-service | jq '.taskDefinition | {containerDefinitions: .containerDefinitions }' > task_definition.json
            aws ecs register-task-definition --execution_role_arn arn:aws:iam::481657431265:role/ecs_task_role --family webapp-service --cli-input-json file://task_definition.json
            aws ecs update-service --cluster sample-ecs-cluster --service webapp-service --task-definition webapp-service
      - run:
          name: migration
          command: |
            aws ecs run-task --cluster sample-ecs-cluster --task-definition webapp-migration

workflows:
  version: 2
  test:
    jobs:
      - build
      - push_image:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - push_image
          filters:
            branches:
              only: master
