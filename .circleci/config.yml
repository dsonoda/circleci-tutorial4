version: 2.1
orbs:
  python: circleci/python@1.0.0
jobs:
  build:
    working_directory: ~/app
    docker:
      - image: circleci/python:3.8
        environment:
          PIPENV_VENV_IN_PROJECT: true
          DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
      - image: circleci/postgres:9.6.2
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.8/site-packages
      - restore_cache:
          key: deps9-{{ .Branch }}-{{ checksum "~/app/app/Pipfile.lock" }}
      - python/install-packages:
          pkg-manager: pipenv
          app-dir: ~/app/app
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "~/app/app/Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"
      - run:
          command: |
            cd ~/app/app
            pipenv run python manage.py test
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: tr1
#   build_image:
#     docker:
#       - image: docker:18.09.0
#     steps:
#       - checkout
#       - setup_remote_docker
#       - run:
#           name: install aws cli
#           command: |
#             apk add --no-cache --update py-pip
#             pip install awscli
#       - run:
#           name: build image
#           command: |
#             $(aws ecr get-login --no-include-email --region ap-northeast-1)
#             docker build -t ${ECR_DOMAIN}:$CIRCLE_SHA1 -t ${ECR_DOMAIN}:latest .
#       - run:
#           name: Push docker image
#           command: |
#             docker push ${ECR_DOMAIN}:$CIRCLE_SHA1
#             docker push ${ECR_DOMAIN}:latest
#   deploy:
#     docker:
#       - image: circleci/python:3.7
#     steps:
#       - run:
#           name: install aws cli
#           command: |
#             sudo pip install awscli
#       - run:
#           name: download jq
#           command: |
#             wget https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
#             mv jq-linux64 jq
#       - run:
#           name: login
#           command: |
#             $(aws ecr get-login --no-include-email --region ap-northeast-1)
#       - run:
#           name: deploy
#           command: |
#             aws ecs describe-task-definition --task-definition webapp-service | jq  '.taskDefinition | { containerDefinitions: .containerDefinitions }' > definition.json
#             aws ecs register-task-definition --execution-role-arn role„ÅÆarn --family webapp-service --cli-input-json file://definition.json
#             aws ecs update-service --cluster sample-ecs-cluster --service webapp-service --task-definition webapp-service
#       - run:
#           name: migration
#           command: |
#             aws ecs run-task --cluster sample-ecs-cluster --task-definition webapp-migration
# workflows:
#   version: 2
#   test:
#     jobs:
#       - build
#       - build_image:
#           requires:
#             - build
#           filters:
#             branches:
#               only: master
#       - deploy:
#           requires:
#             - build_image
#           filters:
#             branches:
#               only: master
